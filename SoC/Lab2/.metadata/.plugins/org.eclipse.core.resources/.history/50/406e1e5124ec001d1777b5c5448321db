/*******************************************************************************
* Header Files
*******************************************************************************/
#include "cyhal.h"
#include "cybsp.h"

/*******************************************************************************
* Global Variables
*******************************************************************************/
#define HIGH 	0
#define LOW 	1

bool state = 0;

void gpio_interrupt_handler(void* handler_arg, cyhal_gpio_event_t event)
{
    state = state + 1;
    cyhal_gpio_toggle(P0_3);
}

int main(void)
{
	cybsp_init();
    __enable_irq();

       /* Initialize pin P0_0 GPIO as an input pin */
       cyhal_gpio_init(P0_4, CYHAL_GPIO_DIR_INPUT, CYHAL_GPIO_DRIVE_NONE, false);

       /* Initialize pin P0_1 GPIO as an output with strong drive mode and initial value = true (high) */
       cyhal_gpio_init(P0_3, CYHAL_GPIO_DIR_OUTPUT, CYHAL_GPIO_DRIVE_STRONG, true);

       /* Register callback function - gpio_interrupt_handler and pass the value global_count */
       cyhal_gpio_register_callback(P0_4,&state);

       /* Enable falling edge interrupt event with interrupt priority set to 3 */
       cyhal_gpio_enable_event(P0_4, CYHAL_GPIO_IRQ_FALL, 3, true);

    for (;;)
    {
    	if (state == 1){
    		cyhal_gpio_toggle(P0_3);
    		cyhal_system_delay_ms(100);
    	}
    	else{
    		cyhal_gpio_write(P0_3,LOW);
    	}
    }
}

/* [] END OF FILE */
